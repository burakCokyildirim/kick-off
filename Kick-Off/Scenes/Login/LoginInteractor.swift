//
//  LoginInteractor.swift
//  Kick-Off
//
//  Created by Burak Çokyıldırım on 5.03.2022.
//
//  Template generated by Burak Cokyildirim

import Foundation

class LoginInteractor: BaseInteractor {
    
    // MARK: - Dependencies
    var presenter: LoginPresenterInteractorProtocol!
    
    // MARK: - Initialization
    override init(networkService: NetworkServiceProtocol? = nil) {
        super.init(networkService: networkService)
    }
    
    // MARK: - Business Logic
    func login(username: String, password: String) {
        let parameters = [
            "username": username,
            "password": password
        ]
        networkService.executeRequest(
            method: .post, url: NetworkConstans.login, parameters: parameters
        ) { [weak self] (result: Result<LoginModel, NetworkError>) in
            switch result {
            case .success(let model):
                self?.presenter.successLogin(with: model)
            case .failure(let error):
                self?.presenter.showNetworkError(with: error)
            }
        }
    }
}

// MARK: - Extensions

// MARK: - Protocols Implemantations
extension LoginInteractor: LoginInteractorProtocol {
    
}
