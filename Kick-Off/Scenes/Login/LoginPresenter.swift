//
//  LoginPresenter.swift
//  Kick-Off
//
//  Created by Burak Çokyıldırım on 5.03.2022.
//
//  Template generated by Burak Cokyildirim
//

import Foundation

class LoginPresenter: BasePresenter {
    
    // MARK: - Dependencies
    fileprivate var viewController: LoginViewControllerProtocol!
    fileprivate var interactor: LoginInteractorProtocol!
    fileprivate var delegate: LoginPresenterDelegateProtocol?

    // MARK: - Properties
    let userDefaults = UserDefaults.standard
    
    // MARK: - Initialization
    init(viewController: LoginViewControllerProtocol, interactor: LoginInteractorProtocol, delegate: LoginPresenterDelegateProtocol?, extras: Any?) {
        self.viewController = viewController
        self.interactor = interactor
        self.delegate = delegate
    }

    override func showNetworkError(with error: NetworkError) {
        viewController.hideLoading()
        viewController.showAlert(with: error.localizedDescription)
    }
}

// MARK: View Protocol
extension LoginPresenter: LoginPresenterViewProtocol {
    func login(with username: String?, password: String?) {
        guard let username = username, let password = password,
            !username.isEmpty, !password.isEmpty
        else {
            viewController.showAlert(with: "Please, enter all areas.")
            return
        }
        viewController.showLoading()
        interactor.login(username: username, password: password)
    }
}

// MARK: Interactor Protocol
extension LoginPresenter: LoginPresenterInteractorProtocol {
    func successLogin(with model: LoginModel) {
        viewController.hideLoading()

        userDefaults.accessToken = model.accessToken
        userDefaults.refreshToken = model.refreshToken

        viewController.presentHome()
    }
}

