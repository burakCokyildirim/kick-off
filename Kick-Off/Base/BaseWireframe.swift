//
//  BaseWireframe.swift
//  Kick-Off
//
//  Created by Burak Çokyıldırım on 5.03.2022.
//
//  Template generated by Burak Cokyildirim

import UIKit

enum WireframeTransitionType {
    case root(window: UIWindow? = nil)
    case present(fromViewController: UIViewController)
    case push(navigationController: UINavigationController, animated: Bool = true)
}

class BaseWireframe {
    internal func changeView(transationType: WireframeTransitionType, viewController: UIViewController) {
        switch transationType {
        case .root(let window):
            if let window = window {
                window.rootViewController = viewController
                window.makeKeyAndVisible()
            } else {
                UIApplication.shared.windows.first?.rootViewController = viewController
                UIApplication.shared.windows.first?.makeKeyAndVisible()
            }
        case .present(let fromViewController):
            fromViewController.present(viewController, animated: true, completion: nil)
        case .push(let navigationController, let animated):
            navigationController.pushViewController(viewController, animated: animated)
        }
    }
}
